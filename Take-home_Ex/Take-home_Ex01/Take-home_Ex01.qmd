---
title: "Take-home Exercise 1: Demographic structures and distribution of Singapore in 2024"
author: "Vanessa Riadi"
date: "May 4, 2025"
date-modified: "last-modified"
format:
  html:
    toc: true
execute: 
  echo: true
  eval: true
  warning: false
  freeze: true
---

# [1]{style="color:#d496d4; background:none;"} Overview

A local online media company that publishes daily content on digital platforms is planning to release an article on **demographic structures and distribution of Singapore in 2024**.

# [2]{style="color:#d496d4; background:none;"} Objective

Assuming the role of the graphical editor of the media company, you are tasked to prepare at most three data visualisations for the article.

# [3]{style="color:#d496d4; background:none;"} Analytical Toolkit: RStudio

RStudio and Quarto are used as the primary analytical toolkit for this project. The data is processed using appropriate **tidyverse** family of packages and the data visualisation prepared using **ggplot2** and its extensions.

Before we get started, it is important for us to ensure that the required R packages have been installed.

::: callout-note
# Install [**pacman**](https://cran.r-project.org/web/packages/pacman/index.html){target="_blank"} package

If you have yet to install pacman, install itby typing below in the Console:

```{r}
#| eval: false
options(repos = c(CRAN = "https://cloud.r-project.org"))
install.packages("pacman")
```
:::

We then load the following R packages using the `pacman::p_load()` function:

\- [**tidyverse**](https://www.tidyverse.org/){target="_blank"}, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\
- [**patchwork**](https://patchwork.data-imaginist.com/){target="_blank"} for combining multiple ggplot2 graphs into one figure.\
- [**plotly**](https://plotly.com/r/){target="_blank"}, R library for plotting interactive statistical graphs.\
- **ggrepel:** a R package provides geoms for ggplot2 to repel overlapping text labels.\
- **ggthemes:** a R package provides some extra themes, geoms, and scales for ggplot.\
- **hrbrthemes**: a R package provides typography-centric themes and theme components for ggplot2.\
- [**qreport**](https://cran.r-project.org/web/packages/qreport/index.html){target="_blank"}: Provides statistical components, tables, and graphs. - [**ggiraph**](https://davidgohel.github.io/ggiraph/){target="_blank"}: for making â€˜ggplotâ€™ graphics interactive.

```{r}
pacman::p_load(tidyverse, patchwork,
               plotly, ggrepel,
               ggthemes, hrbrthemes, ggiraph, DT, qreport)
```

# [4]{style="color:#d496d4; background:none;"} Data

Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024 dataset shared by [Department of Statistics, Singapore(DOS)](https://www.singstat.gov.sg/find-data/search-by-theme/population/geographic-distribution/latest-data){target="_blank"}

## [4.1]{style="color:#d496d4; background:none;"} Load the Data

First we load the data.

```{r}
demographic_data <- read_csv("data/respopagesexfa2024.csv")
```

![](images/datapreview.jpg)

## [4.2]{style="color:#d496d4; background:none;"} Check the Data

```{r}
#| echo: false
DT::datatable(demographic_data , options = list(
  columnDefs = list(list(className = 'dt-center', targets = 5)),
  pageLength = 5,
  lengthMenu = c(5, 10, 15, 20)
))
```

From the first glance, we notice that there are '0' Pop in the dataset. For this exercise, we will be focusing on the top-level visualization per Planning Areas and granular details like Population per Subzone and Floor Area aren't necessary. We should exclude those rows with zero population values at the Planning Area level. This will help clean up the data and make the visualizations clearer by removing unnecessary zeros. We will do it in [Chapter 4.3](#dataprep)

::: callout-tip
# Did you know?

There are more R packages that can help you to view or describe data. E.g. [Hmisc](https://cran.r-project.org/web/packages/Hmisc/index.html){target="_blank"}, [psych](https://cran.r-project.org/web/packages/psych/index.html){target="_blank"}, [**qreport**](https://cran.r-project.org/web/packages/qreport/index.html){target="_blank"} package. I will be using qreport here

If you have yet to install qreport, install it by typing below in the Console:

```{r}
#| eval: false
options(repos = c(CRAN = "https://cloud.r-project.org"))
install.packages("qreport")
```
:::

Here I am using `qreport`package's [dataOverview](https://search.r-project.org/CRAN/refmans/qreport/html/dataOverview.html){target="_blank"} that I already pre-load earlier.

```{r}
dataOverview(demographic_data, plot = c("none"),)
```

Let's also count what's the total Pop

```{r}
cntpop <- demographic_data %>%
  summarise(Pop = sum(Pop, na.rm = TRUE)) 
cat(cntpop$Pop)
```

::: {.nursebox .nurse data-latex="nurse"}
#### **Observation** {.no-top-padding}

-   The data shows Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex as of June 2024 with total population of 4,187,720.

-   We observe that there are 75,696 rows and 7 columns. No missing values are observed. Refer to the column legend in [Appendix A](#appendixa)

-   There are a total of seven attributes. 5 of them are categorical data type and the other three are in numerical data type.

    -   The categorical attributes are: PA, SZ, AG, Sex, FA.
    -   The numerical attributes are: Pop, Time.

-   We can also observe how many distinct values for each Variable. This will help us think what to use for our visualization.
:::

## [4.3]{style="color:#d496d4; background:none;"} Data Preparation {#dataprep}

### [4.3.1]{style="color:#d496d4; background:none;"} Cleaning Data
As mentioned earlier, we will be focusing on the top-level visualization per Planning Areas and granular details like Population per Subzone and Floor Area aren't necessary. Here we will exclude those rows with zero population values at the Planning Area level by using `filter`.

::: panel-tabset
## Cleaned Data

```{r}
#| echo: false
demographic_data_clean <- demographic_data %>%
  filter(Pop > 0)

DT::datatable(demographic_data_clean , options = list(
  columnDefs = list(list(className = 'dt-center', targets = 5)),
  pageLength = 5,
  lengthMenu = c(5, 10, 15, 20)))
```

## Code

Clean using `filter` and display as data table

```{r}
#| eval: false
demographic_data_clean <- demographic_data %>%
  filter(Pop > 0)

DT::datatable(demographic_data_clean , options = list(
  columnDefs = list(list(className = 'dt-center', targets = 5)),
  pageLength = 5,
  lengthMenu = c(5, 10, 15, 20)))
```
:::

### [4.3.2]{style="color:#d496d4; background:none;"} Age Group recoding
We will be recoding the Age Group to three groups for clearer visualization: Below 20 years, 20-64 Years, 65 years & Over following [National Statistical Standards Recommendations on Definition and Classification of Age](https://www.singstat.gov.sg/-/media/files/standards_and_classifications/nsa.ashx){target="_blank"} (More details in [Appendix B](#appendixb) ).

::: panel-tabset
## Data

```{r}
#| echo: false
demographic_data_recode <- demographic_data_clean %>%
  mutate(
    AG_recode = recode(
      AG,
      "0_to_4" = "Below 20 Years",
      "5_to_9" = "Below 20 Years",
      "10_to_14" = "Below 20 Years",
      "15_to_19" = "Below 20 Years",
      "20_to_24" = "20-64 Years",
      "25_to_29" = "20-64 Years",
      "30_to_34" = "20-64 Years",
      "35_to_39" = "20-64 Years",
      "40_to_44" = "20-64 Years",
      "45_to_49" = "20-64 Years",
      "50_to_54" = "20-64 Years",
      "55_to_59" = "20-64 Years",
      "60_to_64" = "20-64 Years",
      "65_to_69" = "65 Years and Above",
      "70_to_74" = "65 Years and Above",
      "75_to_79" = "65 Years and Above",
      "80_to_84" = "65 Years and Above",
      "85_to_89" = "65 Years and Above",
      "90_and_over" = "65 Years and Above"
    )
  )

DT::datatable(demographic_data_recode , options = list(
  columnDefs = list(list(className = 'dt-center', targets = 5)),
  pageLength = 5,
  lengthMenu = c(5, 10, 15, 20)))
```

## Code

```{r}
#| eval: false
demographic_data_recode <- demographic_data_clean %>%
  mutate(
    AG_recode = recode(
      AG,
      "0_to_4" = "Below 20 Years",
      "5_to_9" = "Below 20 Years",
      "10_to_14" = "Below 20 Years",
      "15_to_19" = "Below 20 Years",
      "20_to_24" = "20-64 Years",
      "25_to_29" = "20-64 Years",
      "30_to_34" = "20-64 Years",
      "35_to_39" = "20-64 Years",
      "40_to_44" = "20-64 Years",
      "45_to_49" = "20-64 Years",
      "50_to_54" = "20-64 Years",
      "55_to_59" = "20-64 Years",
      "60_to_64" = "20-64 Years",
      "65_to_69" = "65 Years and Above",
      "70_to_74" = "65 Years and Above",
      "75_to_79" = "65 Years and Above",
      "80_to_84" = "65 Years and Above",
      "85_to_89" = "65 Years and Above",
      "90_and_over" = "65 Years and Above"
    )
  )

DT::datatable(demographic_data_recode , options = list(
  columnDefs = list(list(className = 'dt-center', targets = 5)),
  pageLength = 5,
  lengthMenu = c(5, 10, 15, 20)))
```
:::

# [5]{style="color:#d496d4; background:none;"} Data Visualisation, Observation, and Insights

## [5.1]{style="color:#d496d4; background:none;"} Top 10 Planning Areas (PA) Ranked by Size of Resident Population (Pop)

::: panel-tabset
# ðŸŽ€ Plot 1

```{r}
#| echo: false
top10PA <- demographic_data_clean %>%
  group_by(PA) %>%
  summarise(Pop = sum(Pop, na.rm = TRUE)) %>%
  slice_max(order_by = Pop, n = 10)

top10plot <- ggplot(data = top10PA, 
       aes(y = reorder(PA, Pop/1000), x = Pop/1000)) +  # reorder PA by Pop
  geom_col(show.legend = FALSE, fill = "pink4") +
  geom_text(aes(label = (Pop/1000)),
            hjust = -0.2, color = "black", size = 3) +
  ggtitle("Top 10 Planning Areas in 2024\nRanked by Size of Resident Population",
  subtitle = paste("Total resident population:", 
                 format(round(cntpop$Pop / 1000, 2), big.mark = ","), 
                 "thousand")) +
  labs(
    y = NULL,
    x = "Resident Population\nin thousands (â€˜000)",
    caption = "Source: singstat.gov.sg"
  ) +
  theme_ipsum(base_family = "Arial",
  plot_title_size = 14,
  subtitle_size = 10,
  caption_size = 8,
  plot_title_face = "bold",
  caption_face = "italic",
  grid = "",
  axis_title_face = "bold",
  axis_title_size = 11) +
  theme(axis.text.x = element_blank(),
        axis.text.y = element_text(size=11, face="bold"),
        axis.title.x = element_text(hjust = 0.5)
        )+
  scale_x_continuous(expand = expansion(mult = c(0, 0.1)))

top10plot
```

# Code

```{r}
#| eval: false
top10PA <- demographic_data_clean %>%
  group_by(PA) %>%
  summarise(Pop = sum(Pop, na.rm = TRUE)) %>%
  slice_max(order_by = Pop, n = 10)

top10plot <- ggplot(data = top10PA, 
       aes(y = reorder(PA, Pop/1000), x = Pop/1000)) +  # reorder PA by Pop
  geom_col(show.legend = FALSE, fill = "pink4") +
  geom_text(aes(label = (Pop/1000)),
            hjust = -0.2, color = "black", size = 3) +
  ggtitle("Top 10 Planning Areas in 2024\nRanked by Size of Singapore Resident Population",
  subtitle = paste("Total resident population:", 
                 format(round(cntpop$Pop / 1000, 2), big.mark = ","), 
                 "thousand")) +
  labs(
    y = NULL,
    x = "Resident Population\nin thousands (â€˜000)",
    caption = "Source: singstat.gov.sg"
  ) +
  theme_ipsum(base_family = "Arial",
  plot_title_size = 14,
  subtitle_size = 10,
  caption_size = 8,
  plot_title_face = "bold",
  caption_face = "italic",
  grid = "",
  axis_title_face = "bold",
  axis_title_size = 11) +
  theme(axis.text.x = element_blank(),
        axis.text.y = element_text(size=11, face="bold"),
        axis.title.x = element_text(hjust = 0.5)
        )+
  scale_x_continuous(expand = expansion(mult = c(0, 0.1)))

top10plot
```

# Deepdive for more insights

```{r}
# Total population of the top 10 Planning Area
cntpoptop10 <- top10PA %>%
  summarise(Pop = sum(Pop, na.rm = TRUE)) 
cat(cntpoptop10$Pop)
```

```{r}
# The percentage of the population of the top 10 most populous Planning Area relative to the total population.
perc_pop_top10 <- (cntpoptop10 / cntpop) * 100
cat(perc_pop_top10$Pop)
```
:::

::: {.nursebox .nurse data-latex="nurse"}
#### ðŸŽ€ **Insights Plot 1** {.no-top-padding}

-   Slightly over half (56.3%) of the 4,187.72 thousand (\~4.19 million) residents in Singapore stayed in the top 10 planning areas of residence.

-   There were five planning areas with more than 250,000 residents each, namely Tampines, Bedok, Sengkang, Jurong West, and Woodlands.

-   Tampines was the most populated with 284,720 residents.
:::

## [5.3]{style="color:#d496d4; background:none;"} Age Group and Sex distribution

::: panel-tabset
# ðŸŽ€ Plot 2

```{r}
#| echo: false
# Define age group levels and labels
AG_levels <- c(
  "0_to_4", "5_to_9", "10_to_14", "15_to_19", "20_to_24",
  "25_to_29", "30_to_34", "35_to_39", "40_to_44", "45_to_49",
  "50_to_54", "55_to_59", "60_to_64", "65_to_69", "70_to_74",
  "75_to_79", "80_to_84", "85_to_89", "90_and_over"
)

AG_labels <- c(
  "0-4", "5-9", "10-14", "15-19", "20-24", "25-29", "30-34", "35-39",
  "40-44", "45-49", "50-54", "55-59", "60-64", "65-69", "70-74", "75-79",
  "80-84", "85-89", ">90"
)

AG_lookup <- setNames(AG_labels, AG_levels)

# Compute population shares by age group
AGsum2 <- demographic_data_clean %>%
  group_by(AG) %>%
  summarise(Pop = sum(Pop, na.rm = TRUE), .groups = "drop") %>%
  mutate(
    AG = factor(AG, levels = AG_levels),
    Pop_share = Pop / sum(Pop),
    cum_share = cumsum(Pop_share),
    percentile = round(cum_share * 100, 1)
  ) %>%
  arrange(AG)

# Median and Q3 age groups
median_AG <- AGsum2 %>% filter(cumsum(Pop) >= sum(Pop) / 2) %>% slice(1) %>% pull(AG)
q3_AG     <- AGsum2 %>% filter(cumsum(Pop) >= sum(Pop) * 0.75) %>% slice(1) %>% pull(AG)

# Convert median and Q3 to labels
median_label <- AG_lookup[as.character(median_AG)]
q3_label     <- AG_lookup[as.character(q3_AG)]

# Prepare population pyramid data
pyramid_data <- demographic_data_clean %>%
  group_by(AG, Sex) %>%
  summarise(Population = sum(Pop, na.rm = TRUE) / 1000, .groups = "drop") %>%
  mutate(
    AG = factor(AG, levels = AG_levels, labels = AG_labels, ordered = TRUE),
    PopPercentage = ifelse(Sex == "Females", -Population, Population) / sum(Population) * 100,
    PopPercentage = round(PopPercentage, 2),
    Signal = ifelse(Sex == "Females", -1, 1)
  )


# Create the population pyramid plot
pyramid_plot <- ggplot(pyramid_data, aes(x = AG, y = PopPercentage, fill = Sex)) +
  geom_bar(stat = "identity") +
  geom_text(aes(y = PopPercentage + Signal * 0.5, label = abs(PopPercentage)),
            size = 3, color = "black") +
  coord_flip() +
  scale_fill_manual(values = c("Females" = "pink2", "Males" = "steelblue"),
                    guide = guide_legend(override.aes = list(fill = NA))) +
  scale_y_continuous(labels = abs) +
  annotate("segment", x = median_label, xend = median_label, y = -4, yend = 3.6,
           color = "red4", linewidth = 0.7, linetype = "dotted") +
  annotate("text", x = median_label, y = 5, label = "Median",
           color = "red4", size = 2.8, fontface = "bold") +
  annotate("segment", x = q3_label, xend = q3_label, y = -3.65, yend = 3.65,
           color = "red4", linewidth = 0.7, linetype = "dotted") +
  annotate("text", x = q3_label, y = 5, label = "Q3",
           color = "red4", size = 2.8, fontface = "bold") +
  ggtitle("Population Pyramid of Singapore Residents\nby Age and Sex 2024",
          subtitle = "in percentage (%)") +
  labs(
    y = "Population (%)",
    x = "Age Group",
    fill = "Sex",
    caption = "Source: singstat.gov.sg"
  ) +
  theme_ipsum(base_family = "Arial",
              plot_title_size = 14,
              subtitle_size = 10,
              caption_size = 8,
              plot_title_face = "bold",
              caption_face = "italic",
              grid = "Y",
              axis_title_face = "bold",
              axis_title_size = 11,
              axis_text_size = 8) +
  theme(
    strip.text = element_text(face = "bold"),
    axis.title.x = element_text(hjust = 0.5),
    axis.title.y = element_text(hjust = 0.5),
    legend.position = "top",
    legend.title = element_blank(),
    legend.justification = c(0.45, 0),
    legend.margin = margin(t = -20, r = 0, b = -10, l = 0, unit = "pt")
  )

pyramid_plot

```

# Code

```{r}
#| eval: false
# Define age group levels and labels
AG_levels <- c(
  "0_to_4", "5_to_9", "10_to_14", "15_to_19", "20_to_24",
  "25_to_29", "30_to_34", "35_to_39", "40_to_44", "45_to_49",
  "50_to_54", "55_to_59", "60_to_64", "65_to_69", "70_to_74",
  "75_to_79", "80_to_84", "85_to_89", "90_and_over"
)

AG_labels <- c(
  "0-4", "5-9", "10-14", "15-19", "20-24", "25-29", "30-34", "35-39",
  "40-44", "45-49", "50-54", "55-59", "60-64", "65-69", "70-74", "75-79",
  "80-84", "85-89", ">90"
)

AG_lookup <- setNames(AG_labels, AG_levels)

# Compute population shares by age group
AGsum2 <- demographic_data_clean %>%
  group_by(AG) %>%
  summarise(Pop = sum(Pop, na.rm = TRUE), .groups = "drop") %>%
  mutate(
    AG = factor(AG, levels = AG_levels),
    Pop_share = Pop / sum(Pop),
    cum_share = cumsum(Pop_share),
    percentile = round(cum_share * 100, 1)
  ) %>%
  arrange(AG)

# Median and Q3 age groups
median_AG <- AGsum2 %>% filter(cumsum(Pop) >= sum(Pop) / 2) %>% slice(1) %>% pull(AG)
q3_AG     <- AGsum2 %>% filter(cumsum(Pop) >= sum(Pop) * 0.75) %>% slice(1) %>% pull(AG)

# Convert median and Q3 to labels
median_label <- AG_lookup[as.character(median_AG)]
q3_label     <- AG_lookup[as.character(q3_AG)]

# Prepare population pyramid data
pyramid_data <- demographic_data_clean %>%
  group_by(AG, Sex) %>%
  summarise(Population = sum(Pop, na.rm = TRUE) / 1000, .groups = "drop") %>%
  mutate(
    AG = factor(AG, levels = AG_levels, labels = AG_labels, ordered = TRUE),
    PopPercentage = ifelse(Sex == "Females", -Population, Population) / sum(Population) * 100,
    PopPercentage = round(PopPercentage, 2),
    Signal = ifelse(Sex == "Females", -1, 1)
  )


# Create the population pyramid plot
pyramid_plot <- ggplot(pyramid_data, aes(x = AG, y = PopPercentage, fill = Sex)) +
  geom_bar(stat = "identity") +
  geom_text(aes(y = PopPercentage + Signal * 0.5, label = abs(PopPercentage)),
            size = 3, color = "black") +
  coord_flip() +
  scale_fill_manual(values = c("Females" = "pink2", "Males" = "steelblue"),
                    guide = guide_legend(override.aes = list(fill = NA))) +
  scale_y_continuous(labels = abs) +
  annotate("segment", x = median_label, xend = median_label, y = -4, yend = 3.6,
           color = "red4", linewidth = 0.7, linetype = "dotted") +
  annotate("text", x = median_label, y = 5, label = "Median",
           color = "red4", size = 2.8, fontface = "bold") +
  annotate("segment", x = q3_label, xend = q3_label, y = -3.65, yend = 3.65,
           color = "red4", linewidth = 0.7, linetype = "dotted") +
  annotate("text", x = q3_label, y = 5, label = "Q3",
           color = "red4", size = 2.8, fontface = "bold") +
  ggtitle("Population Pyramid of Singapore Residents\nby Age and Sex 2024",
          subtitle = "in percentage (%)") +
  labs(
    y = "Population (%)",
    x = "Age Group",
    fill = "Sex",
    caption = "Source: singstat.gov.sg"
  ) +
  theme_ipsum(base_family = "Arial",
              plot_title_size = 14,
              subtitle_size = 10,
              caption_size = 8,
              plot_title_face = "bold",
              caption_face = "italic",
              grid = "Y",
              axis_title_face = "bold",
              axis_title_size = 11,
              axis_text_size = 8) +
  theme(
    strip.text = element_text(face = "bold"),
    axis.title.x = element_text(hjust = 0.5),
    axis.title.y = element_text(hjust = 0.5),
    legend.position = "top",
    legend.title = element_blank(),
    legend.justification = c(0.45, 0),
    legend.margin = margin(t = -20, r = 0, b = -10, l = 0, unit = "pt")
  )

pyramid_plot

```

# Alternative Plot

Alternatively for more simpler visualisation we can also use this plot, though we can only infer Age Distribution Insights from this plot.

```{r}
#| echo: false
AG_levels <- c(
  "0_to_4", "5_to_9", "10_to_14", "15_to_19", "20_to_24",
  "25_to_29", "30_to_34", "35_to_39", "40_to_44", "45_to_49",
  "50_to_54", "55_to_59", "60_to_64", "65_to_69", "70_to_74",
  "75_to_79", "80_to_84", "85_to_89", "90_and_over"
)

AGsum2 <- demographic_data_clean %>%
  group_by(AG) %>%
  summarise(Pop = sum(Pop, na.rm = TRUE), .groups = "drop") %>%
  mutate(AG = factor(AG, levels = AG_levels)) %>%
  arrange(AG) %>%
  mutate(
    Pop_share = Pop / sum(Pop),
    cum_share = cumsum(Pop_share),
    percentile = round(cum_share * 100, 1)
  )

# Get the median group
median_AGsum2 <- AGsum2 %>%
  filter(cumsum(Pop) >= sum(Pop) / 2) %>%
  slice(1) %>%
  pull(AG)

# Get the third quantile or 75 percentile
q3_AGsum2 <- AGsum2 %>%
  filter(cumsum(Pop) >= sum(Pop) * 0.75) %>%
  slice(1) %>%
  pull(AG)

AGsumplot2 <- AGsum2 %>%
  ggplot(
       aes(y = Pop/1000, x = AG)) +  # reorder AG_recode by Pop
  geom_col(show.legend = FALSE, fill = "pink4") +
  geom_text(aes(label = (Pop/1000)),
            color = "black", size = 3, angle = 90, hjust = -0.2) +
  ggtitle("Age Distribution of Singapore Resident Population",
  subtitle = "in thousands (â€˜000)") +
  annotate("segment",
         x = median_AGsum2, xend = median_AGsum2,
         y = 0, yend = 360,
         color = "red", 
         linewidth = 0.7, 
         linetype = "dotted") +
  annotate("text",
         x = median_AGsum2, 
         y = 370,
         label = "Median",
         color = "red",
         size = 2.8)+
  annotate("segment",
         x = q3_AGsum2, xend = q3_AGsum2,
         y = 0, yend = 360,
         color = "skyblue", 
         linewidth = 0.7, 
         linetype = "dotted") +
  annotate(
    geom = "text", 
    x = q3_AGsum2, 
    y = 370,
    label = paste0("Q3"),
    color="skyblue",
    size = 2.8)+
  labs(
    y = NULL,
    x = "Age Group",
    caption = "Source: singstat.gov.sg") +
  theme_ipsum(base_family = "Arial",
  plot_title_size = 14,
  subtitle_size = 10,
  caption_size = 8,
  plot_title_face = "bold",
  caption_face = "italic",
  grid = "Y",
  axis_title_face = "bold",
  axis_title_size = 11) +
  theme(axis.text.x = element_text(size=8, face="bold", angle = -45, hjust = 0),
        axis.text.y = element_blank(), #element_text(size=11, face="bold"),
        axis.title.x = element_text(size=11, face="bold", hjust = 0.5)
        )+
  scale_y_continuous(expand = expansion(mult = c(0, 0.02))) + 
  scale_x_discrete(labels=c("0_to_4" = "0-4",
      "5_to_9" = "5-9",
      "10_to_14" = "10-14",
      "15_to_19" = "15-19",
      "20_to_24" = "20-24",
      "25_to_29" = "25-29",
      "30_to_34" = "30-34",
      "35_to_39" = "35-39",
      "40_to_44" = "40-44",
      "45_to_49" = "45-49",
      "50_to_54" = "50-54",
      "55_to_59" = "55-59",
      "60_to_64" = "60-64",
      "65_to_69" = "65-69",
      "70_to_74" = "70-74",
      "75_to_79" = "75-79",
      "80_to_84" = "80-84",
      "85_to_89" = "85-89",
      "90_and_over" = "> 90"))

AGsumplot2
```

# Deepdive for more insights

```{r}
# Details of the population pyramid distribution
print(pyramid_data, n = 38)

# Details of the AG distribution
AGsum2
```
:::

::: {.nursebox .nurse data-latex="nurse"}
#### ðŸŽ€ **Insights Plot 2** {.no-top-padding}

-   The median age falls within 40 to 44 age group. About 25% are aged 60 and above, with 18% aged 65 and older, highlighting [aging population trend](https://www.weforum.org/stories/2023/09/life-expectancy-countries-ageing-populations/){target="_blank"}.
-   Children (0â€“14) account for only about 13.8% of the population, indicating low birth rates. Slightly more males than females are observed in this group.
-   The working-age population (15â€“64 years), as defined by the [Ministry of Manpower](https://stats.mom.gov.sg/Statistics/Pages/labourforce.aspx){target="_blank"}, comprises around 68.2% of the population. This reflects a strong labour force, though future demographic challenges may arise as this group continues to age.
-   The 25-64 age group shows a near-equal gender balance.
-   The gender gap widens in the older age cohorts, with majority female in the 80+ age groups. This show that females live longer than males on average, consistent with the life expectancy at birth between the different gendersfrom [2023 report by the Singapore Department of Statistics](https://www.singstat.gov.sg/-/media/files/publications/population/lifetable22-23.ashx){target="_blank"}.
:::

## [5.3]{style="color:#d496d4; background:none;"} Association Between Age Group Distribution and Planning Area in Singapore

::: panel-tabset
# ðŸŽ€ Plot 3

```{r}
#| echo: false
#| fig-height: 15
table_data <- table(demographic_data_recode$AG_recode, demographic_data_recode$PA)

chi_test <- chisq.test(table_data)

residuals_df <- as.data.frame(as.table(chi_test$residuals))
ggplot(residuals_df, aes(Var1, Var2, fill = Freq)) +
     geom_tile() +
     geom_text(aes(label = round(Freq, 2)), size = 4) +
     scale_fill_gradient2(low = "steelblue", high = "red3", mid = "white", midpoint = 0) +
     labs(x = "AG", y = "PA", fill = "Residuals") +
  ggtitle("Association Between Age Group\nand Planning Area in Singapore 2024",
         subtitle = "Meassured using Pearson's Chi-squared test") +
  labs(caption = "Source: singstat.gov.sg")+
theme_ipsum(base_family = "Arial",
            plot_title_size = 14,
            subtitle_size = 10,
            caption_size = 8,
            plot_title_face = "bold",
            caption_face = "italic",
            grid = "Y",
            axis_title_face = "bold",
            axis_title_size = 11,
            axis_text_size = 8) +
  theme(
    strip.text = element_text(face = "bold"),
    axis.text.x = element_text(size=10, face="bold", angle = -45, hjust = 0),
    axis.text.y = element_text(size=10),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    legend.title = element_blank(),
    legend.justification = c(0.45, 0),
    legend.margin = margin(t = -20, r = 0, b = -10, l = 0, unit = "pt"))+
  scale_x_discrete(expand = expansion(add = 0.5)) +
  scale_y_discrete(expand = expansion(add = 0.5)) 

```

# Code

```{r}
#| eval: false
#| fig-height: 15
table_data <- table(demographic_data_recode$AG_recode, demographic_data_recode$PA)

chi_test <- chisq.test(table_data)

residuals_df <- as.data.frame(as.table(chi_test$residuals))
ggplot(residuals_df, aes(Var1, Var2, fill = Freq)) +
     geom_tile() +
     geom_text(aes(label = round(Freq, 2)), size = 4) +
     scale_fill_gradient2(low = "steelblue", high = "red3", mid = "white", midpoint = 0) +
     labs(x = "AG", y = "PA", fill = "Residuals") +
  ggtitle("Association Between Age Group\nand Planning Area in Singapore 2024",
         subtitle = "Meassured using Pearson's Chi-squared test") +
  labs(caption = "Source: singstat.gov.sg")+
theme_ipsum(base_family = "Arial",
            plot_title_size = 14,
            subtitle_size = 10,
            caption_size = 8,
            plot_title_face = "bold",
            caption_face = "italic",
            grid = "Y",
            axis_title_face = "bold",
            axis_title_size = 11,
            axis_text_size = 8) +
  theme(
    strip.text = element_text(face = "bold"),
    axis.text.x = element_text(size=10, face="bold", angle = -45, hjust = 0),
    axis.text.y = element_text(size=10),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    legend.title = element_blank(),
    legend.justification = c(0.45, 0),
    legend.margin = margin(t = -20, r = 0, b = -10, l = 0, unit = "pt"))+
  scale_x_discrete(expand = expansion(add = 0.5)) +
  scale_y_discrete(expand = expansion(add = 0.5)) 

```
:::

::: {.nursebox .nurse data-latex="nurse"}
#### ðŸŽ€ **Insights Plot 3** {.no-top-padding}

-   [Central Areas](https://www.hdb.gov.sg/about-us/history/hdb-towns-your-home/central){target="_blank"} like Downtown Core are skewed toward working-age group with strong over-representation of the 20â€“64 group (+7.46) and lesser children (â€“4.03) and seniors (â€“6.69), reflecting its role as a Central Business District. Similar patterns appear in Newton, Museum (Bras Basah, Dhoby Ghaut, Fort Canning), and Singapore River (Boat Quay, Clarke Quay, Robertson Quay).

-   New BTO areas like (Tengah)[https://www.hdb.gov.sg/about-us/history/hdb-towns-your-home/tengah]{target="_blank"} and [Punggol](https://www.hdb.gov.sg/about-us/history/hdb-towns-your-home/punggol){target="_blank"} show more children and lesser seniors, indicating young families moving into new Towns / Planning Areas.

-   [Mature Towns](https://www.channelnewsasia.com/singapore/mature-estates-hdb-flats-classified-cna-explains-3581846#:~:text=The%20mature%20towns%20and%20estates,Serangoon%2C%20Tampines%20and%20Toa%20Payoh.){target="_blank"} such as Bedok, Ang Mo Kio, and Hougang exhibit neutral residuals, suggesting stable populations with a mix of age groups and long-term residents.

-   Affluent Districts such as [Bukit Timah](https://www.propertyasiadirect.com/sg/places/bukit-timah/#google_vignette){target="_blank"}, we observe more children (+1.98) and 20-65 group (+2.99) with lesser seniors (-5.75). Proximity to "good schools" for *kiasu* parents likely attracts young wealthy families with its abundance of private housing. Similar trends observed in Tanglin.

::: 

# [6]{style="color:#d496d4; background:none;"} Reference

\- [ggplot for categorical-data](https://mq-software-carpentry.github.io/r-ggplot-extension/02-categorical-data/index.html){target="_blank"}\
- [Describe function](https://www.geeksforgeeks.org/describe-function-in-r/){target="_blank"}\
- [gt package](https://gt.rstudio.com/){target="_blank"}\
- [theme for ggplot2](https://ggplot2.tidyverse.org/reference/theme.html){target="_blank"}\
- [Recode Values with dplyr](https://dplyr.tidyverse.org/reference/recode.html){target="_blank"}\
- [Customize tick marks and labels](https://www.sthda.com/english/wiki/ggplot2-axis-ticks-a-guide-to-customize-tick-marks-and-labels){target="_blank"}\
- [National Statistical Standards Recommendations on Definition and Classification of Age](https://www.singstat.gov.sg/-/media/files/standards_and_classifications/nsa.ashx){target="_blank"}\
- [Cencus of Population 2020](https://www.parliament.gov.sg/docs/default-source/default-document-library/cop2020sr2.pdf){target="_blank"}\
- [Population Pyramid Plot](https://www.njtierney.com/post/2022/08/09/ggplot-pyramid/){target="_blank"}\
- [Ageing Population](https://www.weforum.org/stories/2023/09/life-expectancy-countries-ageing-populations/){target="_blank"}\
- [Heatmap ggplot2](https://r-charts.com/correlation/heat-map-ggplot2/){target="_blank"}\
- [Chi Square in r](https://www.datacamp.com/tutorial/chi-square-test-r){target="_blank"}

# [7]{style="color:#d496d4; background:none;"} Appendix

## [7.1]{style="color:#d496d4; background:none;"} Appendix A {#appendixa}

| **Column Name** | **Description**             |
|-----------------|-----------------------------|
| PA              | Planning Area               |
| SZ              | Subzone                     |
| AG              | Age Group                   |
| Sex             | Sex                         |
| FA              | Floor Area of Residence     |
| Pop             | Resident Count (Population) |
| Time            | Time / Period               |

: {tbl-colwidths="\[20,80\]"}

## [7.2]{style="color:#d496d4; background:none;"} Appendix B {#appendixb}
[National Statistical Standards Recommendations on Definition and Classification of Age](https://www.singstat.gov.sg/-/media/files/standards_and_classifications/nsa.ashx){target="_blank"}

| **AG**      | **AG_recode** |
|-------------|-------------------|
| 0_to_4      | Below 20 years    |
| 5_to_9      | Below 20 years    |
| 10_to_14    | Below 20 years    |
| 15_to_19    | Below 20 years    |
| 20_to_24    | 20-64 Years       |
| 25_to_29    | 20-64 Years       |
| 30_to_34    | 20-64 Years       |
| 35_to_39    | 20-64 Years       |
| 40_to_44    | 20-64 Years       |
| 45_to_49    | 20-64 Years       |
| 50_to_54    | 20-64 Years       |
| 55_to_59    | 20-64 Years       |
| 60_to_64    | 20-64 Years       |
| 65_to_69    | 65 years & Over   |
| 70_to_74    | 65 years & Over   |
| 75_to_79    | 65 years & Over   |
| 80_to_84    | 65 years & Over   |
| 85_to_89    | 65 years & Over   |
| 90_and_over | 65 years & Over       |

