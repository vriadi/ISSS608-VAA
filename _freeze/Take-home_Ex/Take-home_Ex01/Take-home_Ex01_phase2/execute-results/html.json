{
  "hash": "4ea73fd1f93b1db4132a19c0ac25e08b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 1 Part 2\"\nauthor: \"Vanessa Riadi\"\ndate: \"May 9, 2025\"\ndate-modified: \"last-modified\"\nformat:\n  html:\n    toc: true\nexecute: \n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n# [1]{style=\"color:#d496d4; background:none;\"} Introduction, Package and Data Load, Data Preparation\n\nI will be reviewing this pie chart from [LIAW YING TING CELIN](https://isss608celin.netlify.app/take-home_ex/take-home_ex01/take-home_ex01#pie-chart-by-regions)\n\nFirst we load all the necessary packages and data preparation that she has done.\n\n::: panel-tabset\n# Data\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 8\n  Planning_Area Subzone          Age   Sex   Population  Time Age_numeric Region\n  <chr>         <chr>            <fct> <chr>      <dbl> <dbl>       <dbl> <chr> \n1 Ang Mo Kio    Ang Mo Kio Town… 0     Males         10  2024           0 North…\n2 Ang Mo Kio    Ang Mo Kio Town… 0     Fema…         10  2024           0 North…\n3 Ang Mo Kio    Ang Mo Kio Town… 1     Males         10  2024           1 North…\n4 Ang Mo Kio    Ang Mo Kio Town… 1     Fema…         10  2024           1 North…\n5 Ang Mo Kio    Ang Mo Kio Town… 2     Males         10  2024           2 North…\n6 Ang Mo Kio    Ang Mo Kio Town… 2     Fema…         10  2024           2 North…\n```\n\n\n:::\n:::\n\n\n\n# Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, ggrepel, \n               ggthemes,  hrbrthemes,\n               patchwork, dplyr) \n\nresident_data <- read_csv(\"data/respopagesex2024.csv\")\n\nresident_data_clean <- resident_data %>%\n  rename(\n    Planning_Area = PA,\n    Subzone = SZ,\n    Population = Pop\n  ) %>%\n  # Convert Age to \"90+\" if it's \"90_and_Over\"\n  mutate(\n    Age = ifelse(Age == \"90_and_Over\", \"90\", Age),\n    Population = as.numeric(Population),\n    Age = factor(Age, levels = as.character(0:90)),\n    Age_numeric = as.numeric(as.character(Age))  \n  )\n\n# 1. Step 1\nregion_map <- list(\n  North = c(\n    \"Central Water Catchment\", \"Lim Chu Kang\", \"Mandai\",\n    \"Sembawang\", \"Simpang\", \"Sungei Kadut\", \"Woodlands\", \"Yishun\"\n  ),\n  `North-East` = c(\n    \"Ang Mo Kio\", \"Hougang\", \"Punggol\", \"Sengkang\", \n    \"Serangoon\", \"Seletar\"\n  ),\n  East = c(\n    \"Bedok\", \"Changi\", \"Changi Bay\", \n    \"Pasir Ris\", \"Paya Lebar\", \"Tampines\"\n  ),\n  West = c(\n    \"Boon Lay\", \"Bukit Batok\", \"Bukit Panjang\", \"Choa Chu Kang\",\n    \"Clementi\", \"Jurong East\", \"Jurong West\", \"Pioneer\", \n    \"Tengah\", \"Tuas\", \"Western Water Catchment\"\n  ),\n  Central = c(\n    \"Bishan\", \"Bukit Merah\", \"Bukit Timah\", \"Central Area\",\n    \"Downtown Core\", \"Marina East\", \"Marina South\", \"Museum\",\n    \"Newton\", \"Novena\", \"Orchard\", \"Outram\", \"River Valley\",\n    \"Rochor\", \"Singapore River\", \"Straits View\", \"Tanglin\"\n  )\n)\n\n# Step 2\nresident_regioned <- resident_data_clean %>%\n  mutate(\n    Region = case_when(\n      Planning_Area %in% region_map$North        ~ \"North\",\n      Planning_Area %in% region_map$`North-East` ~ \"North-East\",\n      Planning_Area %in% region_map$East         ~ \"East\",\n      Planning_Area %in% region_map$West         ~ \"West\",\n      Planning_Area %in% region_map$Central      ~ \"Central\",\n      TRUE                                       ~ NA_character_\n    )\n  ) %>%\n  filter(!is.na(Region))\n\nhead(resident_regioned)\n```\n:::\n\n\n:::\n\n# [2]{style=\"color:#d496d4; background:none;\"} Original Visualisation: Pie Chart By Regions\n\n::: panel-tabset\n## The Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_phase2_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n## The Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summarise population by Region and Sex\npie_all_regions <- resident_regioned %>%\n  group_by(Region, Sex) %>%\n  summarise(Population = sum(Population), .groups = \"drop\")\n\n\n# Define the correct stacking order for pie slices\nordered_levels <- c(\n  \"Central.Males\", \"Central.Females\",\n  \"East.Males\", \"East.Females\",\n  \"North.Males\", \"North.Females\",\n  \"North-East.Males\", \"North-East.Females\",\n  \"West.Males\", \"West.Females\"\n)\n\n# Prepare the data\npie_all_regions <- pie_all_regions %>%\n  mutate(\n    RegionSex = factor(paste(Region, Sex, sep = \".\"), levels = ordered_levels),\n    label = paste0(round(Population / sum(Population) * 100, 1), \"%\")\n  )\n\n# Plot: simple, clean pie with percentages inside\nggplot(pie_all_regions, aes(x = \"\", y = Population, fill = RegionSex)) +\n  geom_col(width = 1, color = \"white\") +\n  geom_text(\n    aes(label = label),\n    position = position_stack(vjust = 0.5),\n    size = 3,\n    color = \"black\"\n  ) +\n  coord_polar(theta = \"y\") +\n  theme_void(base_size = 11) +\n  labs(\n    title = \"Population Composition by Region and Gender (2024)\",\n    fill = \"Region & Sex\"\n  ) +\n  scale_fill_manual(\n    values = c(\n      \"Central.Males\"     = \"#f4cccc\",\n      \"Central.Females\"   = \"#a94442\",\n      \"East.Males\"        = \"#d9ead3\",\n      \"East.Females\"      = \"#6aa84f\",\n      \"North.Males\"       = \"#fce5cd\",\n      \"North.Females\"     = \"#e69138\",\n      \"North-East.Males\"  = \"#d9d2e9\",\n      \"North-East.Females\"= \"#8e7cc3\",\n      \"West.Males\"        = \"#cfe2f3\",\n      \"West.Females\"      = \"#3c78d8\"\n    ),\n    breaks = rev(ordered_levels)\n  )\n```\n:::\n\n\n:::\n\n# [3]{style=\"color:#d496d4; background:none;\"} Learning from the Original Visualisation\n\nWe learned from [Lesson 2](https://isss608-ay2024-25apr.netlify.app/lesson/lesson02/lesson02-designing%20graphs%20to%20enlighten#a-tale-of-four-quadrants) about [**The Four Quadrant**](https://dataremixed.com/2012/05/data-visualization-clarity-or-aesthetics/) of Data Visualization and the consideration between **Clarity** or **Aesthetics**.\n\n::::::::: columns\n:::: {.column width=\"60%\"}\n![](images/fourquadrant.jpg){width=\"95%\"}\n\n::: {style=\"font-size: 0.65em\"}\nSource: [Data Visualisation: Clarity or Aesthetics](http://dataremixed.com/2012/05/data-visualization-clarity-or-aesthetics/)\n:::\n::::\n\n::: {.column width=\"40%\"}\nUsing The Four Quadrants, we evaluate three good design principles and three areas for further improvements.\n\nUsing the principals, we can classify this in the: **Quadrant IV -- Confusing yet Beautiful**\n:::\n\n::: {style=\"font-size: 0.85em\"}\n## [3.1]{style=\"color:#d496d4; background:none;\"} Three good design principles [Why is it \"beautiful\"?]{style=\"color:#d496d4; background:none;\"}\n\n-   Color coding is visually appealing.\n-   Legend is complete and match the segment. It's also located where it's easy to find.\n-   Clean and clear font choice with percentage labels are neatly placed inside the slices.\n\n## [3.2]{style=\"color:#d496d4; background:none;\"} Three areas for further improvement [Why is it \"confusing\"?]{style=\"color:#d496d4; background:none;\"}\n\n-   There's no clear visual grouping of the same region. For example, \"Central.Males\" and \"Central.Females\" are separated visually, making it hard to compare within regions.\n\n    -   It also blends region and gender into a single variable without grouping, which prevents high-level insights (e.g., total by gender or region).\n\n-   Pie Chart might not be ideal for this kind of \"demographic\" data with so many regions.\n\n    -   If you still want to stick with a pie chart, you can create a [**sunburst plot**](https://www.simplesheets.co/blog/sunburst-chart) to show the grouping. In this case, we can show the splits between Males and Females for each region. Which is what I will implement in the makeover version.\n\n-   Though the legend is complete, it's not very clear and aesthethic with the `.` in the naming. \n:::\n\n# [4]{style=\"color:#d496d4; background:none;\"} Makeover version\n\nNext we prepare the makeover version of the data visualisation with the learning above.\n\n::: callout-note\nAlthough from the learning above we note that Pie Chart might not be ideal for this kind of \"demographic\" data with so many regions, the task is to improve and **not** change the entire idea completely but to **improve** on it as mentioned in class in session 3.\n:::\n\nI will be implementing changes directly using the original code and mark the lines changes with `# VR CHANGE:`\n\n::: panel-tabset\n# Makeover Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_phase2_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n# Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summarise population by Region and Sex\npie_all_regions <- resident_regioned %>%\n  group_by(Region, Sex) %>%\n  summarise(Population = sum(Population), .groups = \"drop\") %>%\n  mutate(  # VR CHANGE: combine together from the second part\n    RegionSex = factor(paste(Region, Sex, sep = \".\")), #, levels = ordered_levels), VR CHANGE: not needed as we will level later after combined\n    ring = \"outer\", # VR CHANGE: this \"ring\" column is to mark which layer\n    x = 2 # VR CHANGE: this x is to mark which layer and for position later\n  )\n\n# Define the correct stacking order for pie slices # VR CHANGE: NOT NEEDED, use new level later after we combine\n#ordered_levels <- c(\n#  \"Central.Males\", \"Central.Females\",\n#  \"East.Males\", \"East.Females\",\n#  \"North.Males\", \"North.Females\",\n#  \"North-East.Males\", \"North-East.Females\",\n#  \"West.Males\", \"West.Females\"\n#)\n\n# VR CHANGE: have moved up and combine together\n# Prepare the data \n#pie_all_regions <- pie_all_regions %>% \n#  mutate(\n#    RegionSex = factor(paste(Region, Sex, sep = \".\"), levels = ordered_levels),\n#    label = paste0(round(Population / sum(Population) * 100, 1), \"%\")\n#  )\n\n# VR CHANGE: here we will create the \"outer layer\" which is the overall region\npie_inner <- resident_regioned %>%\n  group_by(Region) %>%\n  summarise(Population = sum(Population), .groups = \"drop\") %>%\n  mutate(\n    RegionSex = Region,\n    ring = \"inner\", # VR CHANGE: this \"ring\" column is to mark which layer\n    x = 1 # VR CHANGE: this x is to mark which layer and for position later\n  )\n\n# VR CHANGE: Combine both for plotting\npie_combined <- bind_rows(pie_all_regions, pie_inner)\n\n# VR CHANGE: after we combine, we need to define order of slices again\nordered_levels_combined <- c(\n  \"Central\", \"Central.Males\", \"Central.Females\",\n  \"East\", \"East.Males\", \"East.Females\",\n  \"North\", \"North.Males\", \"North.Females\",\n  \"North-East\", \"North-East.Males\", \"North-East.Females\",\n  \"West\", \"West.Males\", \"West.Females\"\n)\n\n# VR CHANGE: Here we will label\npie_combined <- pie_combined %>%\n  group_by(ring) %>%\n  mutate(\n    percent = Population / sum(Population) * 100, # this is the overall % for each region\n    label = paste0(round(percent, 1), \"%\")\n  ) %>%\n  ungroup() %>%\n  group_by(ring, Region) %>%\n  mutate(\n    percent = Population / sum(Population) * 100,\n    label = case_when(\n      is.na(Sex) ~ paste0(label, \"\\n\", Region),  # keep original label if sex is NA\n      !is.na(Sex) ~ paste0(round(percent, 1), \"%\")  # this is sex % per region otherwise show the new percentage,\n    ),\n    RegionSex = case_when(\n      is.na(RegionSex) ~ Region,  # keep original label if sex is NA\n      !is.na(RegionSex) ~ RegionSex\n  )) %>%\n  ungroup() %>%\n  mutate(RegionSex = factor(RegionSex, levels = ordered_levels_combined)) %>%\n  arrange(RegionSex) # make surethe order of slices are correct\n\n# VR CHANGE: after running the first time, decided to add this so we can adjust the angle of the inner layer label automatically\npie_combined <- pie_combined %>%\n  group_by(ring) %>%\n  mutate(\n    midpoint = cumsum(Population) - 0.5 * Population,\n    total = sum(Population),\n    angle = 360 * midpoint / total,\n    adjusted_angle = case_when(\n      angle <= 90 ~ angle,\n      angle > 90 & angle < 290 ~ angle + 180,\n      angle >= 290 ~ angle) # flip upside-down labels\n  ) %>%\n  ungroup()\n\n# VR CHANGE: I want to make the sunburst plot look better and easier to see. Hence maybe a poker chip (thinner outer layer) would differentiate them better\npie_combined <- pie_combined %>%\n  mutate(\n    xmin = case_when(\n      ring == \"inner\" ~ 0.5,  # Inner ring closer to center\n      ring == \"outer\" ~ 1.1   # Outer ring further out\n    ),\n    xmax = case_when(\n      ring == \"inner\" ~ 1.1,  # Inner ring thickness = 0.6\n      ring == \"outer\" ~ 1.3   # Outer ring thickness = 0.2\n    )\n  ) %>%\n  group_by(ring) %>%\n  arrange(ring, desc(RegionSex)) %>%\n  mutate(\n    ymax = cumsum(Population),\n    ymin = ymax - Population,\n    x_text = ( xmax + xmin )/2\n  ) %>%\n  ungroup()\n# The sizing chunk end here\n\n# VR CHANGE: use the new pie combined and add more attributes \n# Plot: simple, clean pie with percentages inside\nmakeover_plot <- ggplot(pie_combined, aes(y = Population, xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = RegionSex)) + #VR CHANGE: use pie_combined dataset and change x = \"\" to x = x. Also assign to a variable name 'makeover_plot' so we can call it again later for comparison\n  geom_rect(color = \"white\", linewidth = 1.5, show.legend = TRUE) +  #VR CHANGE: add linewidth so the plots are more separated and use geom_rect so we can have a nice poker chip looking\n#VR CHANGE: we will have 2 geom_text, the first one is for the inner ring here\n  geom_text(\n    data = subset(pie_combined, ring == \"inner\"), #VR CHANGE: filter the part of the dataset to use\n    aes(label = label,\n        x = x_text + 0.1), \n    position = position_stack(vjust = 0.5),\n    size = 3,\n    color = \"white\", #change from black to white\n    show.legend = FALSE\n  ) +\n#VR CHANGE: inner ring label end\n#VR CHANGE: this part is for outer ring\n  geom_text(\n  data = subset(pie_combined, ring == \"outer\"),\n  aes(\n    x = x_text,\n    label = label,\n    angle = adjusted_angle,\n    hjust = 0.5\n  ),\n  position = position_stack(vjust = 0.5),\n  size = 2.5,\n  color = \"black\",\n  show.legend = FALSE\n) +\n#VR CHANGE: outer ring label end\n  coord_polar(theta = \"y\") +\n  theme_void(base_size = 11) +\n  labs(\n    title = \"Population Composition by Region and Gender (2024)\", \n    fill = \"Region & Sex\",\n    caption = \"Source: singstat.gov.sg\"\n  ) +\n  scale_fill_manual(\n    values = c(\n      \"Central.Males\"     = \"#f4cccc\",\n      \"Central.Females\"   = \"#a94442\",\n      \"East.Males\"        = \"#d9ead3\",\n      \"East.Females\"      = \"#6aa84f\",\n      \"North.Males\"       = \"#fce5cd\",\n      \"North.Females\"     = \"#e69138\",\n      \"North-East.Males\"  = \"#d9d2e9\",\n      \"North-East.Females\"= \"#8e7cc3\",\n      \"West.Males\"        = \"#cfe2f3\",\n      \"West.Females\"      = \"#3c78d8\",\n      \"Central\"    = \"#7D3D3C\", # VR CHANGE: ADD COLOR FOR THE REGION\n      \"East\"       = \"#5A834A\", # VR CHANGE: ADD COLOR FOR THE REGION\n      \"North\"      = \"#B67127\", # VR CHANGE: ADD COLOR FOR THE REGION\n      \"North-East\" = \"#7160A1\", # VR CHANGE: ADD COLOR FOR THE REGION\n      \"West\"       = \"#3C5FA2\"  # VR CHANGE: ADD COLOR FOR THE REGION\n    ),\n    breaks = unique(pie_combined$RegionSex[!is.na(pie_combined$Sex)]), #VR CHANGE: to hide the unecessary legend like the region since we label it directly in the plot\n    labels = c( #VR CHANGE: add this to re-label the legend\n      \"Central.Females\"    = \"Central - Female\",\n      \"Central.Males\"      = \"Central - Male\",\n      \"East.Females\"       = \"East - Female\",\n      \"East.Males\"         = \"East - Male\",\n      \"North.Females\"      = \"North - Female\",\n      \"North.Males\"        = \"North - Male\",\n      \"North-East.Females\" = \"North East - Female\",\n      \"North-East.Males\"   = \"North East - Male\",\n      \"West.Females\"       = \"West - Female\",\n      \"West.Males\"         = \"West - Male\"\n    )\n  ) +\n  theme( # VR CHANGE: add this to make the title bo,d\n    plot.title = element_text(face = \"bold\", size = 14),\n    plot.caption = element_text(face = \"italic\", size = 8, hjust = 0),\n  ) \n\nmakeover_plot\n```\n:::\n\n\n:::\n\n# [5]{style=\"color:#d496d4; background:none;\"} Comparison\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_phase2_files/figure-html/unnamed-chunk-7-1.png){width=1152}\n:::\n:::\n\n\n\n# [6]{style=\"color:#d496d4; background:none;\"} Reference\n\n[The Four Quadrant](https://dataremixed.com/2012/05/data-visualization-clarity-or-aesthetics/)\n\n[LIAW YING TING CELIN Take-Home Exercise 1](https://isss608celin.netlify.app/take-home_ex/take-home_ex01/take-home_ex01#pie-chart-by-regions)\n\n[Data Visualisation: Clarity or Aesthetics](http://dataremixed.com/2012/05/data-visualization-clarity-or-aesthetics/)\n\n[Pie-donut-chart-in-r](https://statdoe.com/pie-donut-chart-in-r/)\n",
    "supporting": [
      "Take-home_Ex01_phase2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}